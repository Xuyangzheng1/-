

import os
import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QLabel, QPushButton, QVBoxLayout, QWidget, QFileDialog
from PyQt5.QtGui import QPixmap
from PyQt5.QtCore import Qt, QTimer
from PyQt5.QtCore import QCoreApplication

class LotteryApp(QMainWindow):
    def __init__(self):
        super().__init__()

        self.image_folder = ""
        self.image_paths = []

        self.current_image_index = 0
        self.scroll_interval = 5  # 滚动间隔（毫秒）

        self.init_ui()

    def init_ui(self):
        self.setGeometry(100, 100, 500, 400)
        self.setWindowTitle("图片滚动程序")

        # 设置窗口背景图片
        # self.setStyleSheet("QMainWindow {background-image: url('C:\Users\DELL\Desktop\337a8d9f8a569f88976605b8ea831dae.webp');}")
        current_dir = QCoreApplication.applicationDirPath()

        # 图像文件的绝对路径
        absolute_path = "C:/Users/DELL/Desktop/337a8d9f8a569f88976605b8ea831dae.jpg"

        # 计算相对路径
        relative_path = os.path.relpath(absolute_path, current_dir)
        print(relative_path)
       
        self.setStyleSheet("QMainWindow {background-image: url('C:/Users/DELL/Desktop/337a8d9f8a569f88976605b8ea831dae.jpg');}")



        self.central_widget = QWidget(self)
        self.setCentralWidget(self.central_widget)

        self.vbox_layout = QVBoxLayout(self.central_widget)

        self.label_image = QLabel(self)
        self.label_image.setAlignment(Qt.AlignCenter)
        self.vbox_layout.addWidget(self.label_image)

        self.choose_folder_button = QPushButton("选择抽奖候选人目录", self)
        self.choose_folder_button.clicked.connect(self.choose_folder)
        self.vbox_layout.addWidget(self.choose_folder_button)

        self.start_button = QPushButton("开始抽奖", self)
        self.start_button.clicked.connect(self.start_scroll)
        self.vbox_layout.addWidget(self.start_button)

        self.stop_button = QPushButton("停止抽奖", self)
        self.stop_button.clicked.connect(self.stop_scroll)
        self.vbox_layout.addWidget(self.stop_button)

        self.is_scrolling = False
        self.timer = QTimer(self)
        self.timer.timeout.connect(self.scroll_images)

    def choose_folder(self):
        folder_dialog = QFileDialog()
        folder_dialog.setFileMode(QFileDialog.Directory)
        folder_path = folder_dialog.getExistingDirectory(self, "选择图片目录")
        if folder_path:
            self.image_folder = folder_path
            self.update_image_paths()

    def update_image_paths(self):
        self.image_paths = [os.path.join(self.image_folder, file) for file in os.listdir(self.image_folder) if file.endswith(('.jpg', '.png'))]

    def display_image(self, image_path):
        if not os.path.exists(image_path):
            print(f"Error: Image file not found - {image_path}")
            return

        pixmap = QPixmap(image_path)
        self.label_image.setPixmap(pixmap.scaled(self.label_image.size(), Qt.KeepAspectRatio))

    def start_scroll(self):
        if not self.is_scrolling:
            if not self.image_folder:
                print("请选择图片目录")
                return

            self.update_image_paths()

            if not self.image_paths:
                print("所选目录中没有有效图片文件")
                return

            self.is_scrolling = True
            self.timer.start(self.scroll_interval)

    def stop_scroll(self):
        self.is_scrolling = False
        self.timer.stop()

    def scroll_images(self):
        if self.is_scrolling:
            # 显示下一张图片
            image_path = self.image_paths[self.current_image_index]
            self.display_image(image_path)

            # 更新图片索引
            self.current_image_index = (self.current_image_index + 1) % len(self.image_paths)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = LotteryApp()
    window.show()
    sys.exit(app.exec_())
